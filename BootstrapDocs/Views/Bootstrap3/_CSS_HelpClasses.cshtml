<div class="bs-docs-section">
  <h1 id="helper-classes" class="page-header">輔助類別<!--Helper classes--></h1>

  <h3 id="helper-classes-colors">情境顏色<!--Contextual colors--></h3>
    <p>
        透過重點工具類別使用少數的顏色來傳達含義。這些類別也能套用至連結並會讓移入效果（hover）變的較暗，就像預設的連結樣式。
        <!--Convey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.-->
    </p>
  <div class="bs-example">
    <p class="text-muted">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>
    <p class="text-primary">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
    <p class="text-success">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>
    <p class="text-info">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
    <p class="text-warning">Etiam porta sem malesuada magna mollis euismod.</p>
    <p class="text-danger">Donec ullamcorper nulla non metus auctor fringilla.</p>
  </div>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"text-muted"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"text-primary"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"text-success"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"text-info"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"text-warning"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"text-danger"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span></code></pre></div>
  <div class="bs-callout bs-callout-info">
    <h4>特別處理<!--Dealing with specificity--></h4>
      <p>
          有些情況，情境重點文字類別無法套至特別的其他選擇器上。多數情況下，一個不錯的變通方法是在類別裡用  <code>&lt;span&gt;</code> 包裝你的文字。
          <!--Sometimes emphasis classes cannot be applied due to the specificity of another selector. In most cases, a sufficient workaround is to wrap your text in a <code>&lt;span&gt;</code> with the class.-->
      </p>
  </div>
  <div class="bs-callout bs-callout-warning">
    <h4>傳達意義到輔助技術<!--Conveying meaning to assistive technologies--></h4>
      <p>
          使用顏色僅是提供視覺效果上的含義，這不會被傳達至輔助技術的使用者 - 例如：螢幕閱讀器。請確保顏色所表示的訊息從內容本身上是顯而易見的（情境顏色只是用於加強已存在的文字或標記的含義），或是通過其他的方式來傳達，例如，額外 <code>.sr-only</code> 類別的隱藏文字。
          <!--Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies – such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (the contextual colors are only used to reinforce meaning that is already present in the text/markup), or is included through alternative means, such as additional text hidden with the <code>.sr-only</code> class.-->
      </p>
  </div>

  <h3 id="helper-classes-backgrounds">情境背景<!--Contextual backgrounds--></h3>
    <p>
        類似於情境文字顏色類別，透過任何情境類別都能輕鬆地設置元素的背景。連結元件在移入效果會變較暗，這與文字類別相同。
        <!--Similar to the contextual text color classes, easily set the background of an element to any contextual class. Anchor components will darken on hover, just like the text classes.-->
    </p>
  <div class="bs-example bs-example-bg-classes">
    <p class="bg-primary">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
    <p class="bg-success">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>
    <p class="bg-info">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>
    <p class="bg-warning">Etiam porta sem malesuada magna mollis euismod.</p>
    <p class="bg-danger">Donec ullamcorper nulla non metus auctor fringilla.</p>
  </div>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"bg-primary"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"bg-success"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"bg-info"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"bg-warning"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"bg-danger"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/p&gt;</span></code></pre></div>
  <div class="bs-callout bs-callout-info">
    <h4>特別處理<!--Dealing with specificity--></h4>
    <p>有些情況，情境重點文字類別無法套至特別的其他選擇器上。多數情況下，一個不錯的變通方法是在類別的 <code>&lt;span&gt;</code> 包裝你的文字。<!--Sometimes contextual background classes cannot be applied due to the specificity of another selector. In some cases, a sufficient workaround is to wrap your element's content in a <code>&lt;div&gt;</code> with the class.--></p>
  </div>
  <div class="bs-callout bs-callout-warning">
    <h4>傳達意義到輔助技術<!--Conveying meaning to assistive technologies--></h4>
      <p>
          與<a href="#helper-classes-colors">情境顏色</a>相同，確保顏色意義上傳達並也傳達你的整體安排，而不只是一個純粹的表象。
          <!--As with <a href="#helper-classes-colors">contextual colors</a>, ensure that any meaning conveyed through color is also conveyed in a format that is not purely presentational.-->
      </p>
  </div>

  <h3 id="helper-classes-close">關閉圖示<!--Close icon--></h3>
    <p>
        使用一般關閉圖示來消除內容，像是互動視窗（modal）或警告視窗（alert）。
        <!--Use the generic close icon for dismissing content like modals and alerts.-->
    </p>
  <div class="bs-example">
    <p><button type="button" class="close"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button></p>
  </div>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"close"</span><span class="nt">&gt;&lt;span</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;</span><span class="ni">&amp;times;</span><span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">"sr-only"</span><span class="nt">&gt;</span>Close<span class="nt">&lt;/span&gt;&lt;/button&gt;</span></code></pre></div>


  <h3 id="helper-classes-carets">三角括號<!--Carets--></h3>
    <p>
        使用三角括號來指出此處有下拉選單的功能與選單方向。注意，預設三角括號在@(@Html.ActionLink("向上選單", "Components", null, null, null, "btn-dropdowns-dropup", null, null))會自動以向上三角型呈現。
        <!--Use carets to indicate dropdown functionality and direction. Note that the default caret will reverse automatically in <a href="components.html#btn-dropdowns-dropup">dropup menus</a>.-->
    </p>
  <div class="bs-example">
    <span class="caret"></span>
  </div>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"caret"</span><span class="nt">&gt;&lt;/span&gt;</span></code></pre></div>


  <h3 id="helper-classes-floats">快速浮動<!--Quick floats--></h3>
    <p>
        透過類別可以快速讓元素向左或向右浮動。<code>!important</code> 包含在類別設置之中以避免特別的問題。類別也能進行混合使用。
        <!--Float an element to the left or right with a class. <code>!important</code> is included to avoid specificity issues. Classes can also be used as mixins.-->
    </p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pull-left"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"pull-right"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span></code></pre></div>
<div class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="c1">// Classes
</span><span class="nc">.pull-left</span> <span class="p">{</span>
  <span class="nl">float</span><span class="p">:</span> <span class="nb">left</span> <span class="o">!</span><span class="n">important</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.pull-right</span> <span class="p">{</span>
  <span class="nl">float</span><span class="p">:</span> <span class="nb">right</span> <span class="o">!</span><span class="n">important</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// Usage as mixins
</span><span class="nc">.element</span> <span class="p">{</span>
  <span class="nc">.pull-left</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.another-element</span> <span class="p">{</span>
  <span class="nc">.pull-right</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>

  <div class="bs-callout bs-callout-warning">
    <h4>不要在巡覽列使用<!--Not for use in navbars--></h4>
      <p>
          在巡覽列要使用工具類別來對齊元件，使用 <code>.navbar-left</code> 或 <code>.navbar-right</code> 來替代。更多資訊請參考@(@Html.ActionLink("巡覽列文件", "Components", null, null, null, "navbar-component-alignment", null, null))。
          <!--To align components in navbars with utility classes, use <code>.navbar-left</code> or <code>.navbar-right</code> instead. <a href="components.html#navbar-component-alignment">See the navbar docs</a> for details.-->
      </p>
  </div>


  <h3 id="helper-classes-center">置中內容區塊<!--Center content blocks--></h3>
    <p>
        透過設置元素 <code>display: block</code> 和 <code>margin</code>，將會在置中位置且以區塊模式呈現。可作為 Less 的 mixin 和類別。
        <!--Set an element to <code>display: block</code> and center via <code>margin</code>. Available as a mixin and class.-->
    </p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"center-block"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span></code></pre></div>
<div class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="c1">// 作為類別<!--Classes-->
</span><span class="nc">.center-block</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span><span class="p">;</span>
  <span class="nl">margin-left</span><span class="p">:</span> <span class="nb">auto</span><span class="p">;</span>
  <span class="nl">margin-right</span><span class="p">:</span> <span class="nb">auto</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// 作為 mixin<!--Usage as mixins-->
</span><span class="nc">.element</span> <span class="p">{</span>
  <span class="nc">.center-block</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>


  <h3 id="helper-classes-clearfix">清除浮動<!--Clearfix--></h3>
    <p>
        <strong>在父元素上</strong>加入 <code>.clearfix</code> 就能輕鬆清除 <code>float</code> 效果。這裡普遍使用 Nicolas Gallagher 的 <a href="http://nicolasgallagher.com/micro-clearfix-hack/">micro clearfix</a> 方法。也可使用在 Less 的 mixin。
        <!--Easily clear <code>float</code>s by adding <code>.clearfix</code> <strong>to the parent element</strong>. Utilizes <a href="http://nicolasgallagher.com/micro-clearfix-hack/">the micro clearfix</a> as popularized by Nicolas Gallagher. Can also be used as a mixin.-->
    </p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="c">&lt;!-- 作為類別使用<!--Usage as a class--> --&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"clearfix"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span></code></pre></div>
<div class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="c1">// Mixin本身
</span><span class="nc">.clearfix</span><span class="o">()</span> <span class="p">{</span>
  <span class="k">&amp;</span><span class="nd">:before</span><span class="o">,</span>
  <span class="k">&amp;</span><span class="nd">:after</span> <span class="p">{</span>
    <span class="nl">content</span><span class="p">:</span> <span class="s2">" "</span><span class="p">;</span>
    <span class="nl">display</span><span class="p">:</span> <span class="n">table</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">&amp;</span><span class="nd">:after</span> <span class="p">{</span>
    <span class="nl">clear</span><span class="p">:</span> <span class="nb">both</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 作為 Mixin<!--Usage as a Mixin-->
</span><span class="nc">.element</span> <span class="p">{</span>
  <span class="nc">.clearfix</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>


  <h3 id="helper-classes-show-hide">顯示和隱藏內容<!--Showing and hiding content--></h3>
    <p>
        使用 <code>.show</code> 和 <code>.hidden</code> 類別，可以讓元素顯示或隱藏（包含螢幕閱讀器）。這些類別使用 <code>!important</code> 以避免不必要的衝突，像是<a href="#helper-classes-floats">快速浮動</a>。他們僅在區塊層級進行切換時有效。也可使用在 Less 的 mixin。
        <!--Force an element to be shown or hidden (<strong>including for screen readers</strong>) with the use of <code>.show</code> and <code>.hidden</code> classes. These classes use <code>!important</code> to avoid specificity conflicts, just like the <a href="#helper-classes-floats">quick floats</a>. They are only available for block level toggling. They can also be used as mixins.-->
    </p>
    <p>
        <code>.hide</code> 還是可以使用，但它在螢幕閱讀器不總是有效果，而且從 v3.0.1 開始<strong>不推薦</strong>使用。建議使用 <code>.hidden</code> 或 <code>.sr-only</code> 替代。
        <!--<code>.hide</code> is available, but it does not always affect screen readers and is <strong>deprecated</strong> as of v3.0.1. Use <code>.hidden</code> or <code>.sr-only</code> instead.-->
    </p>
    <p>
        此外，<code>.invisible</code> 類別僅能針對可見的元素進行隱藏，意思是，元素的 <code>display</code> 屬性不會有任何異動，而且元素在 DOM 內仍然有浮動及佈局上的效果。
        <!--Furthermore, <code>.invisible</code> can be used to toggle only the visibility of an element, meaning its <code>display</code> is not modified and the element can still affect the flow of the document.-->
    </p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"show"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"hidden"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/div&gt;</span></code></pre></div>
<div class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="c1">// 類別的用法<!--Classes-->
</span><span class="nc">.show</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">block</span> <span class="o">!</span><span class="n">important</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.hidden</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="nb">none</span> <span class="o">!</span><span class="n">important</span><span class="p">;</span>
  <span class="nl">visibility</span><span class="p">:</span> <span class="nb">hidden</span> <span class="o">!</span><span class="n">important</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.invisible</span> <span class="p">{</span>
  <span class="nl">visibility</span><span class="p">:</span> <span class="nb">hidden</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// 作為 mixin<!--Usage as mixins-->
</span><span class="nc">.element</span> <span class="p">{</span>
  <span class="nc">.show</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.another-element</span> <span class="p">{</span>
  <span class="nc">.hidden</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>


  <h3 id="helper-classes-screen-readers">螢幕閱讀器和鍵盤巡覽內容<!--Screen reader and keyboard navigation content--></h3>
    <p>
        使用 <code>.sr-only</code> 類別，可以對<strong>除了螢幕閱讀器以外</strong>的所有設備隱藏元素。結合使用 <code>.sr-only</code> 和 <code>.sr-only-focusable</code> 類別，當它取得焦點時，再一次顯示元素（例如，僅能使用鍵盤的使用者）。請參考@(@Html.ActionLink("無障礙最佳做法", "GettingStarted", null, null, null, "accessibility", null, null))。也可使用在 Less 的 mixin。
        <!--Hide an element to all devices <strong>except screen readers</strong> with <code>.sr-only</code>. Combine <code>.sr-only</code> with <code>.sr-only-focusable</code> to show the element again when it's focused (e.g. by a keyboard-only user). Necessary for following <a href="../getting-started/#accessibility">accessibility best practices</a>. Can also be used as mixins.-->
    </p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"sr-only sr-only-focusable"</span> <span class="na">href=</span><span class="s">"#content"</span><span class="nt">&gt;</span>Skip to main content<span class="nt">&lt;/a&gt;</span></code></pre></div>
<div class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="c1">// Usage as a Mixin
</span><span class="nc">.skip-navigation</span> <span class="p">{</span>
  <span class="nc">.sr-only</span><span class="o">()</span><span class="p">;</span>
  <span class="nc">.sr-only-focusable</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>


  <h3 id="helper-classes-image-replacement">圖片替換<!--Image replacement--></h3>
    <p>
        <code>.text-hide</code> 工具類別或 mixin，幫助替換元素的文字內容與背景圖片。
        <!--Utilize the <code>.text-hide</code> class or mixin to help replace an element's text content with a background image.-->
    </p>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;h1</span> <span class="na">class=</span><span class="s">"text-hide"</span><span class="nt">&gt;</span>Custom heading<span class="nt">&lt;/h1&gt;</span></code></pre></div>
  <div class="highlight"><pre><code class="language-scss" data-lang="scss"><span class="c1">// 作為 mixin<!--Usage as Mixin-->
</span><span class="nc">.heading</span> <span class="p">{</span>
  <span class="nc">.text-hide</span><span class="o">()</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>
</div>

