<div class="bs-docs-section">
  <h1 id="scrollspy" class="page-header">滑動監視<!--ScrollSpy--> <small>scrollspy.js</small></h1>

  <h2 id="scrollspy-examples">巡覽列範例<!--Example in navbar--></h2>
    <p>
        滑動監視外掛會自動依據滑動位置來更新巡覽列裡的目標。滑動下面區域使其低於巡覽列，然後觀察 <code>active</code> 類別帶來的變化。下拉式選單的子項目會跟著變化為醒目提示效果。
        <!--The ScrollSpy plugin is for automatically updating nav targets based on scroll position. Scroll the area below the navbar and watch the active class change. The dropdown sub items will be highlighted as well.-->
    </p>
  <div class="bs-example">
    <nav id="navbar-example2" class="navbar navbar-default navbar-static" role="navigation">
      <div class="container-fluid">
        <div class="navbar-header">
          <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target=".bs-example-js-navbar-scrollspy">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Project Name</a>
        </div>
        <div class="collapse navbar-collapse bs-example-js-navbar-scrollspy">
          <ul class="nav navbar-nav">
            <li><a href="#fat">@@fat</a></li>
            <li><a href="#mdo">@@mdo</a></li>
            <li class="dropdown">
              <a href="#" id="navbarDrop1" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Dropdown <span class="caret"></span></a>
              <ul class="dropdown-menu" role="menu" aria-labelledby="navbarDrop1">
                <li><a href="#one" tabindex="-1">one</a></li>
                <li><a href="#two" tabindex="-1">two</a></li>
                <li class="divider"></li>
                <li><a href="#three" tabindex="-1">three</a></li>
              </ul>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <div data-spy="scroll" data-target="#navbar-example2" data-offset="0" class="scrollspy-example">
      <h4 id="fat">@@fat</h4>
      <p>Ad leggings keytar, brunch id art party dolor labore. Pitchfork yr enim lo-fi before they sold out qui. Tumblr farm-to-table bicycle rights whatever. Anim keffiyeh carles cardigan. Velit seitan mcsweeney's photo booth 3 wolf moon irure. Cosby sweater lomo jean shorts, williamsburg hoodie minim qui you probably haven't heard of them et cardigan trust fund culpa biodiesel wes anderson aesthetic. Nihil tattooed accusamus, cred irony biodiesel keffiyeh artisan ullamco consequat.</p>
      <h4 id="mdo">@@mdo</h4>
      <p>Veniam marfa mustache skateboard, adipisicing fugiat velit pitchfork beard. Freegan beard aliqua cupidatat mcsweeney's vero. Cupidatat four loko nisi, ea helvetica nulla carles. Tattooed cosby sweater food truck, mcsweeney's quis non freegan vinyl. Lo-fi wes anderson +1 sartorial. Carles non aesthetic exercitation quis gentrify. Brooklyn adipisicing craft beer vice keytar deserunt.</p>
      <h4 id="one">one</h4>
      <p>Occaecat commodo aliqua delectus. Fap craft beer deserunt skateboard ea. Lomo bicycle rights adipisicing banh mi, velit ea sunt next level locavore single-origin coffee in magna veniam. High life id vinyl, echo park consequat quis aliquip banh mi pitchfork. Vero VHS est adipisicing. Consectetur nisi DIY minim messenger bag. Cred ex in, sustainable delectus consectetur fanny pack iphone.</p>
      <h4 id="two">two</h4>
      <p>In incididunt echo park, officia deserunt mcsweeney's proident master cleanse thundercats sapiente veniam. Excepteur VHS elit, proident shoreditch +1 biodiesel laborum craft beer. Single-origin coffee wayfarers irure four loko, cupidatat terry richardson master cleanse. Assumenda you probably haven't heard of them art party fanny pack, tattooed nulla cardigan tempor ad. Proident wolf nesciunt sartorial keffiyeh eu banh mi sustainable. Elit wolf voluptate, lo-fi ea portland before they sold out four loko. Locavore enim nostrud mlkshk brooklyn nesciunt.</p>
      <h4 id="three">three</h4>
      <p>Ad leggings keytar, brunch id art party dolor labore. Pitchfork yr enim lo-fi before they sold out qui. Tumblr farm-to-table bicycle rights whatever. Anim keffiyeh carles cardigan. Velit seitan mcsweeney's photo booth 3 wolf moon irure. Cosby sweater lomo jean shorts, williamsburg hoodie minim qui you probably haven't heard of them et cardigan trust fund culpa biodiesel wes anderson aesthetic. Nihil tattooed accusamus, cred irony biodiesel keffiyeh artisan ullamco consequat.</p>
      <p>Keytar twee blog, culpa messenger bag marfa whatever delectus food truck. Sapiente synth id assumenda. Locavore sed helvetica cliche irony, thundercats you probably haven't heard of them consequat hoodie gluten-free lo-fi fap aliquip. Labore elit placeat before they sold out, terry richardson proident brunch nesciunt quis cosby sweater pariatur keffiyeh ut helvetica artisan. Cardigan craft beer seitan readymade velit. VHS chambray laboris tempor veniam. Anim mollit minim commodo ullamco thundercats.
      </p>
    </div>
  </div><!-- /example -->

  <div class="bs-callout bs-callout-warning">
    <h4>譯者註</h4>
    <p><code>.active</code> 類別的變化必須使用開發者工具來觀察。當下拉滑動接觸到內容的標題（@@fat 或 @@mdo）時，滑動監視外掛會動態為對應巡覽列裡的 <code>&lt;li&gt;</code> 加入 <code>active</code> 類別，以呈現醒目提示效果。</p>
  </div>
  <div class="bs-callout bs-callout-warning">
    <h4>譯者註</h4>
    <p>此範例在 Windows App 模式下並無互動效果。</p>
  </div>  

  <h2 id="scrollspy-usage">使用方法<!--Usage--></h2>

  <div class="bs-callout bs-callout-warning">
    <h4>需要巡覽元件<!--Requires Bootstrap nav--></h4>
      <p>
          滑動監視目前需要使用到@(@Html.ActionLink("巡覽元件", "Components", null, null, null, "nav", null, null))以提供正確的醒目提示與 <code>active</code> 連結。
          <!--Scrollspy currently requires the use of a <a href="../components/#nav">Bootstrap nav component</a> for proper highlighting of active links.-->
      </p>
  </div>
  <div class="bs-callout bs-callout-danger">
    <h4>必須可解析 ID 目標<!--Resolvable ID targets required--></h4>
      <p>
          巡覽連結必須是可解析 id 目標。例如，<code>&lt;a href="#home"&gt;home&lt;/a&gt;</code> 必須在 DOM 中有對應元素，像是 <code>&lt;div id="home"&gt;&lt;/div&gt;</code>。
          <!--Navbar links must have resolvable id targets. For example, a <code>&lt;a href="#home"&gt;home&lt;/a&gt;</code> must correspond to something in the DOM like <code>&lt;div id="home"&gt;&lt;/div&gt;</code>.-->
      </p>
  </div>
  <div class="bs-callout bs-callout-info">
    <h4>不可見（<code>:visible</code>）目標元素會忽略<!--Non-<code>:visible</code> target elements ignored--></h4>
      <p>
         目標元素如果在 jQuery 不是可見的（<a href="http://api.jquery.com/visible-selector/"><code>:visible</code></a>），那麼根據 jQuery 的行為將會被忽略，對應的巡覽將永遠不會有醒目提示的效果。 
          <!--Target elements that are not <a href="http://api.jquery.com/visible-selector/"><code>:visible</code> according to jQuery</a> will be ignored and their corresponding nav items will never be highlighted.-->
      </p>
  </div>

  <h3>需要相對定位<!--Requires relative positioning--></h3>
    <p>
        無論執行方法，滑動監視需要在你監視的元素上使用 <code>position: relative;</code>，通常是在 <code>&lt;body&gt;</code>。
        <!--No matter the implementation method, scrollspy requires the use of <code>position: relative;</code> on the element you're spying on. In most cases this is the <code>&lt;body&gt;</code>.-->
    </p>

  <h3>經由 <code>data-</code> 屬性<!--Via data attributes--></h3>
    <p>
        相當容易就能加入滑動監視的行為到你的頂層巡覽列，加入 <code>data-spy="scroll"</code> 到你想監視的元素上（大部分情況是加到 <code>&lt;body&gt;</code> 上），然後加入 <code>data-target</code> 屬性與 CSS 的 id 或 class 名稱到任何 Bootstrap <code>.nav</code> 元件的父元素上。
        <!--To easily add scrollspy behavior to your topbar navigation, add <code>data-spy="scroll"</code> to the element you want to spy on (most typically this would be the <code>&lt;body&gt;</code>). Then add the <code>data-target</code> attribute with the ID or class of the parent element of any Bootstrap <code>.nav</code> component.-->
    </p>
<div class="highlight"><pre><code class="language-css" data-lang="css"><span class="nt">body</span> <span class="p">{</span>
  <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;body</span> <span class="na">data-spy=</span><span class="s">"scroll"</span> <span class="na">data-target=</span><span class="s">".navbar-example"</span><span class="nt">&gt;</span>
  ...
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"navbar-example"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav nav-tabs"</span> <span class="na">role=</span><span class="s">"tablist"</span><span class="nt">&gt;</span>
      ...
    <span class="nt">&lt;/ul&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
  ...
<span class="nt">&lt;/body&gt;</span></code></pre></div>

  <h3>經由 JavaScript<!--Via JavaScript--></h3>
    <p>
        在加入 <code>position: relative;</code> 之後，就能透過 JavaScript 呼叫滑動監視行為：
        <!--After adding <code>position: relative;</code> in your CSS, call the scrollspy via JavaScript:-->
    </p>
<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'body'</span><span class="p">).</span><span class="nx">scrollspy</span><span class="p">({</span> <span class="na">target</span><span class="p">:</span> <span class="s1">'.navbar-example'</span> <span class="p">})</span></code></pre></div>


  <h3>方法<!--Methods--></h3>
  <h4>.scrollspy('refresh')</h4>
    <p>
        當使用滑動監視的 DOM 元素有新增或移除操作時，你需要去呼叫 <code>refresh</code> 方法，如下所示：
        <!--When using scrollspy in conjunction with adding or removing of elements from the DOM, you'll need to call the refresh method like so:-->
    </p>
<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'[data-spy="scroll"]'</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">$spy</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">scrollspy</span><span class="p">(</span><span class="s1">'refresh'</span><span class="p">)</span>
<span class="p">})</span></code></pre></div>


  <h3>選項<!--Options--></h3>
    <p>
        選項能透過 <code>data-</code> 屬性或 JavaScript 來傳遞。使用 <code>data-</code> 屬性傳遞，將選項名稱附加至 <code>data-</code> 後面，例如，<code>data-offset=""</code>。
        <!--Options can be passed via data attributes or JavaScript. For data attributes, append the option name to <code>data-</code>, as in <code>data-offset=""</code>.-->
    </p>
  <div class="table-responsive">
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 100px;">名稱<!--Name--></th>
         <th style="width: 100px;">類型<!--type--></th>
         <th style="width: 50px;">預設<!--default--></th>
         <th>說明<!--description--></th>
       </tr>
      </thead>
      <tbody>
       <tr>
         <td>offset</td>
         <td>number</td>
         <td>10</td>
           <td>
               計算滑動位置時從頂端要位移的像素。
               <!--Pixels to offset from top when calculating position of scroll.-->
           </td>
       </tr>
      </tbody>
    </table>
  </div><!-- ./bs-table-responsive -->

  <h3>事件<!--Events--></h3>
  <div class="table-responsive">
    <table class="table table-bordered table-striped">
      <thead>
       <tr>
         <th style="width: 150px;">類型<!--Event Type--></th>
         <th>說明<!--Description--></th>
       </tr>
      </thead>
      <tbody>
       <tr>
         <td>activate.bs.scrollspy</td>
           <td>
               當一個項目被滑動監視設置啟用時，此事件會被觸發。
               <!--This event fires whenever a new item becomes activated by the scrollspy.-->
           </td>
      </tr>
      </tbody>
    </table>
  </div><!-- ./bs-table-responsive -->
<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'#myScrollspy'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'activate.bs.scrollspy'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="c1">// do something…</span>
<span class="p">})</span></code></pre></div>
</div>
