<div class="bs-docs-section">
  <h1 id="popovers" class="page-header">彈出提示<!--Popovers--> <small>popover.js</small></h1>

    <p>
        與那些 iPad 類似的功能，為任意元素加入一個小覆蓋層以加入額外資訊。
        <!--Add small overlays of content, like those on the iPad, to any element for housing secondary information.-->
    </p>
    <p>
        彈出提示在標題與內容長度為零時不會顯示。
        <!--Popovers whose both title and content are zero-length are never displayed.-->
    </p>

  <div class="bs-callout bs-callout-danger">
    <h4>外掛相依性<!--Plugin dependency--></h4>
      <p>
          彈出提示依賴<a href="#tooltips">提示訊息外掛</a>，請包含在你使用的 Bootstrap 版本中。
          <!--Popovers require the <a href="#tooltips">tooltip plugin</a> to be included in your version of Bootstrap.-->
      </p>
  </div>
  <div class="bs-callout bs-callout-danger">
    <h4>宣告目的<!--Opt-in functionality--></h4>
      <p>
          出於性能原因，提訊息訊和彈出提示的 data-api 必須明確宣告，意思是，<strong>你必須自行初始化它們</strong>。
          <!--For performance reasons, the Tooltip and Popover data-apis are opt-in, meaning <strong>you must initialize them yourself</strong>.-->
      </p>
      <p>
          有一種方式來初始化頁面上所有彈出提示，透過 <code>data-toggle</code> 屬性來選擇它們自己。
          <!--One way to initialize all popovers on a page would be to select them by their <code>data-toggle</code> attribute:-->
      </p>
<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="nx">$</span><span class="p">(</span><span class="s1">'[data-toggle="popover"]'</span><span class="p">).</span><span class="nx">popover</span><span class="p">()</span>
<span class="p">})</span></code></pre></div>
  </div>
  <div class="bs-callout bs-callout-warning">
    <h4>彈出提示在按鈕群組與 input 群組需要特別設置<!--Popovers in button groups and input groups require special setting--></h4>
      <p>
          當你在 <code>.btn-group</code> 或 <code>.input-group</code> 裡使用彈出提示，你必須設置 <code>container: 'body'</code> （文件後面說明）以避免不必要的副作用（例如，彈出提示被觸發時，會讓元素變寬和（或）失去圓角效果）。
          <!--When using popovers on elements within a <code>.btn-group</code> or an <code>.input-group</code>, you'll have to specify the option <code>container: 'body'</code> (documented below) to avoid unwanted side effects (such as the element growing wider and/or losing its rounded corners when the popover is triggered).-->
      </p>
  </div>
  <div class="bs-callout bs-callout-warning">
    <h4>不要嘗試在隱藏元素使用彈出提示<!--Don't try to show popovers on hidden elements--></h4>
      <p>
          當呼叫 <code>$(...).popover('show')</code> 的目標元素是 <code>display: none;</code> 狀態，那麼會造成提示訊息被不正常定位的情況。
          <!--Invoking <code>$(...).popover('show')</code> when the target element is <code>display: none;</code> will cause the popover to be incorrectly positioned.-->
      </p>
  </div>
  <div class="bs-callout bs-callout-info">
    <h4>在被禁用的元素上使用彈出提示需要額外包裝的容器<!--Popovers on disabled elements require wrapper elements--></h4>
      <p>
          加入彈出提示到被套用 <code>disabled</code> 或 <code>.disabled</code> 的元素上，請將元素放置到 <code>&lt;div&gt;</code> 內並且將彈出提示套用到 <code>&lt;div&gt;</code> 上。
          <!--To add a popover to a <code>disabled</code> or <code>.disabled</code> element, put the element inside of a <code>&lt;div&gt;</code> and apply the popover to that <code>&lt;div&gt;</code> instead.-->
      </p>
  </div>
  <div class="bs-callout bs-callout-info">
    <h4>多行的連結<!--Multiple-line links--></h4>
      <p>
          有時你會想要把彈出提示加到連結裡，但此連結包裝了多行資訊，彈出提示外掛的預設行為會置中對齊，不論是水平或垂置。加入 <code>white-space: nowrap;</code> 到你的連結，可以避免此問題。
          <!--Sometimes you want to add a popover to a hyperlink that wraps multiple lines. The default behavior of the popover plugin is to center it horizontally and vertically. Add <code>white-space: nowrap;</code> to your anchors to avoid this.-->
      </p>
  </div>

  <h2 id="popovers-examples">範例<!--Examples--></h2>
  <h3>靜態彈出提示<!--Static popover--></h3>
    <p>
        有四個方向可選擇：<code>top</code>、<code>right</code>、<code>bottom</code> 和 <code>left</code> 來對齊。
        <!--Four options are available: top, right, bottom, and left aligned.-->
    </p>
  <div class="bs-example bs-example-popover">
    <div class="popover top">
      <div class="arrow"></div>
      <h3 class="popover-title">Popover top</h3>
      <div class="popover-content">
        <p>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>
      </div>
    </div>

    <div class="popover right">
      <div class="arrow"></div>
      <h3 class="popover-title">Popover right</h3>
      <div class="popover-content">
        <p>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>
      </div>
    </div>

    <div class="popover bottom">
      <div class="arrow"></div>
      <h3 class="popover-title">Popover bottom</h3>

      <div class="popover-content">
        <p>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>
      </div>
    </div>

    <div class="popover left">
      <div class="arrow"></div>
      <h3 class="popover-title">Popover left</h3>
      <div class="popover-content">
        <p>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</p>
      </div>
    </div>

    <div class="clearfix"></div>
  </div>

  <h3>現場展示<!--Live demo--></h3>
  <div class="bs-example" style="padding-bottom: 24px;">
    <button type="button" class="btn btn-lg btn-danger bs-docs-popover" data-toggle="popover" title="Popover title" data-content="And here's some amazing content. It's very engaging. Right?">點擊切換彈出提示<!--Click to toggle popover--></button>
  </div>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn btn-lg btn-danger"</span> <span class="na">data-toggle=</span><span class="s">"popover"</span> <span class="na">title=</span><span class="s">"Popover title"</span> <span class="na">data-content=</span><span class="s">"And here's some amazing content. It's very engaging. Right?"</span><span class="nt">&gt;</span>點擊切換彈出提示<!--Click to toggle popover--><span class="nt">&lt;/button&gt;</span></code></pre></div>

  <h4>四個方向<!--Four directions--></h4>
  <div class="bs-example popover-demo">
    <div class="bs-example-popovers">
      <button type="button" class="btn btn-default" data-container="body" data-toggle="popover" data-placement="left" data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">
        向左彈出
      </button>
      <button type="button" class="btn btn-default" data-container="body" data-toggle="popover" data-placement="top" data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">
        向上彈出
      </button>
      <button type="button" class="btn btn-default" data-container="body" data-toggle="popover" data-placement="bottom" data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">
        向下彈出
      </button>
      <button type="button" class="btn btn-default" data-container="body" data-toggle="popover" data-placement="right" data-content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus.">
        向右彈出
      </button>
    </div>
  </div><!-- /example -->
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn btn-default"</span> <span class="na">data-container=</span><span class="s">"body"</span> <span class="na">data-toggle=</span><span class="s">"popover"</span> <span class="na">data-placement=</span><span class="s">"left"</span> <span class="na">data-content=</span><span class="s">"Vivamus sagittis lacus vel augue laoreet rutrum faucibus."</span><span class="nt">&gt;</span>
  向左彈出
<span class="nt">&lt;/button&gt;</span>

<span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn btn-default"</span> <span class="na">data-container=</span><span class="s">"body"</span> <span class="na">data-toggle=</span><span class="s">"popover"</span> <span class="na">data-placement=</span><span class="s">"top"</span> <span class="na">data-content=</span><span class="s">"Vivamus sagittis lacus vel augue laoreet rutrum faucibus."</span><span class="nt">&gt;</span>
  向上彈出
<span class="nt">&lt;/button&gt;</span>

<span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn btn-default"</span> <span class="na">data-container=</span><span class="s">"body"</span> <span class="na">data-toggle=</span><span class="s">"popover"</span> <span class="na">data-placement=</span><span class="s">"bottom"</span> <span class="na">data-content=</span><span class="s">"Vivamus
sagittis lacus vel augue laoreet rutrum faucibus."</span><span class="nt">&gt;</span>
  向下彈出
<span class="nt">&lt;/button&gt;</span>

<span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"btn btn-default"</span> <span class="na">data-container=</span><span class="s">"body"</span> <span class="na">data-toggle=</span><span class="s">"popover"</span> <span class="na">data-placement=</span><span class="s">"right"</span> <span class="na">data-content=</span><span class="s">"Vivamus sagittis lacus vel augue laoreet rutrum faucibus."</span><span class="nt">&gt;</span>
  向右彈出
<span class="nt">&lt;/button&gt;</span></code></pre></div>

  <h4>下次點擊時取消解除狀態<!--Dismiss on next click--></h4>
    <p>
        在使用者下一次點擊時，使用 <code>focus</code> 來觸發取消解除彈出提示的功能。
        <!--Use the <code>focus</code> trigger to dismiss popovers on the next click that the user makes.-->
    </p>
  <div class="bs-callout bs-callout-danger">
    <h4>使用取消解除狀態時，需指定特定的標記<!--Specific markup required for dismiss-on-next-click--></h4>
      <p>
          為了適當的跨瀏覽器與跨平台行為，你應當使用 <code>&lt;a&gt;</code> 標籤，而<i>不是</i>使用 <code>&lt;button&gt;</code> 標籤，並且你必須含有 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#tabindex"><code>tabindex</code></a> 屬性。
          <!--For proper cross-browser and cross-platform behavior, you must use the <code>&lt;a&gt;</code> tag, <i>not</i> the <code>&lt;button&gt;</code> tag, and you also must include a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#tabindex"><code>tabindex</code></a> attribute.-->
      </p>
  </div>
  <div class="bs-example" style="padding-bottom: 24px;">
    <a href="#" tabindex="0" class="btn btn-lg btn-danger bs-docs-popover" role="button" data-toggle="popover" data-trigger="focus" title="Dismissible popover" data-content="And here's some amazing content. It's very engaging. Right?">取消解除狀態<!--Dismissible popover--></a>
  </div>
<div class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span class="na">tabindex=</span><span class="s">"0"</span> <span class="na">class=</span><span class="s">"btn btn-lg btn-danger"</span> <span class="na">role=</span><span class="s">"button"</span> <span class="na">data-toggle=</span><span class="s">"popover"</span> <span class="na">data-trigger=</span><span class="s">"focus"</span> <span class="na">title=</span><span class="s">"Dismissible popover"</span> <span class="na">data-content=</span><span class="s">"And here's some amazing content. It's very engaging. Right?"</span><span class="nt">&gt;</span>取消解除狀態<!--Dismissible popover--><span class="nt">&lt;/a&gt;</span></code></pre></div>


  <h2 id="popovers-usage">使用方法<!--Usage--></h2>
    <p>
        經由 JavaScrip 啟用彈出提示：
        <!--Enable popovers via JavaScript:-->
    </p>
  <div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'#example'</span><span class="p">).</span><span class="nx">popover</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span></code></pre></div>

  <h3>選項<!--Options--></h3>
    <p>
        選項能透過 <code>data-</code> 屬性或 JavaScript 來傳遞。使用 <code>data-</code> 屬性傳遞，將選項名稱附加至 <code>data-</code> 後面，例如，<code>data-animation=""</code>。
        <!--Options can be passed via data attributes or JavaScript. For data attributes, append the option name to <code>data-</code>, as in <code>data-animation=""</code>.-->
    </p>
  <div class="table-responsive">
    <table class="table table-bordered table-striped">
      <thead>
        <tr>
          <th style="width: 100px;">名稱<!--Name--></th>
          <th style="width: 100px;">類型<!--Type--></th>
          <th style="width: 50px;">預設<!--Default--></th>
          <th>說明<!--Description--></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>animation</td>
          <td>boolean</td>
          <td>true</td>
            <td>
                為彈出提示加入一個 CSS 淡入轉換的效果。
                <!--Apply a CSS fade transition to the popover-->
            </td>
        </tr>
        <tr>
          <td>container</td>
          <td>string | false</td>
          <td>false</td>
          <td>
              <p>
                  附加彈出提示到指定的元素，例如：<code>container: 'body'</code>。此選項在下列情況特別有用：它允許你定位彈出提示，在浮動的文件附近觸發元素 - 這將預防彈出提示在調整視窗大小的觸發元素中漂流走。
                  <!--Appends the popover to a specific element. Example: <code>container: 'body'</code>. This option is particularly useful in that it allows you to position the popover in the flow of the document near the triggering element - which will prevent the popover from floating away from the triggering element during a window resize.-->
              </p>
          </td>
        </tr>
        <tr>
          <td>content</td>
          <td>string | function</td>
          <td>''</td>
          <td>
              <p>
                  如果 <code>data-content</code> 屬性不存在，使用此值做為預設內容。
                  <!--Default content value if <code>data-content</code> attribute isn't present.-->
              </p>
              <p>
                  如果一個 function 被指定，它將會呼叫它的 <code>this</code> 參考設定到元素上，彈出提示會被附加上去。
                  <!--If a function is given, it will be called with its <code>this</code> reference set to the element that the popover is attached to.-->
              </p>
          </td>
        </tr>
        <tr>
          <td>delay</td>
          <td>number | object</td>
          <td>0</td>
          <td>
              <p>
                  呈現或隱藏彈出提示的延遲時間（毫秒），注意，不要套用到手動觸發器類型。
                  <!--Delay showing and hiding the popover (ms) - does not apply to manual trigger type-->
              </p>
              <p>
                  如果提供合法的數字，delay設置會同時套用到 hide / show 效果上。
                  <!--If a number is supplied, delay is applied to both hide/show-->
              </p>
              <p>
                  物件建構式：<code>delay: { "show": 500, "hide": 100 }</code>
                  <!--Object structure is: <code>delay: { "show": 500, "hide": 100 }</code>-->
              </p>
          </td>
        </tr>
        <tr>
          <td>html</td>
          <td>boolean</td>
          <td>false</td>
            <td>
                插入 HTML 到彈出提示。如果為 false，jQuery 使用 <code>text</code> 方法來插入內容到 <abbr title="Document Object Model">DOM</abbr> 之中。使用 <code>text</code> 方法，你必須關心 <abbr title="Cross-site scripting">XSS</abbr> 功擊的防禦。
                <!--Insert HTML into the popover. If false, jQuery's <code>text</code> method will be used to insert content into the DOM. Use text if you're worried about XSS attacks.-->
            </td>
        </tr>
        <tr>
          <td>placement</td>
          <td>string | function</td>
          <td>'right'</td>
          <td>
              <p>
                  如何去定位彈出提示的位置 - <code>top</code> | <code>bottom</code> | <code>left</code> | <code>right</code>。<br>當指定為 "<code>auto</code>"，它會動態調整彈出提示的位置。例如，如果 <code>placement</code> 設置為 "<code>auto left</code> 的話，彈出提示會盡可能出現在左邊，否則出現在右邊。
                  <!--How to position the popover - top | bottom | left | right | auto.<br>When "auto" is specified, it will dynamically reorient the popover. For example, if placement is "auto left", the popover will display to the left when possible, otherwise it will display right.-->
              </p>
              <p>
                  當函式決定使用 <code>placement</code>，它會經由第一個參數來指出彈出提示的 DOM 節點，並且經由第二個參數來指出要觸發 DOM 節點的動作。popover.js 裡的 this 設置為彈出提示的執行個體。
                  <!--When a function is used to determine the placement, it is called with the popover DOM node as its first argument and the triggering element DOM node as its second. The <code>this</code> context is set to the popover instance.-->
              </p>
          </td>
        </tr>
        <tr>
          <td>selector</td>
          <td>string</td>
          <td>false</td>
            <td>
                如果有提供 <code>selector</code>，彈出提示物件將會被委派至符合條件的目標上。在實務上，這會使用在動態 HTML 內容套件彈出提示。進行細節可以查看 <a href="https://github.com/twbs/bootstrap/issues/4215">Bootstrap Issue 4215</a> 和<a href="http://jsbin.com/zopod/1/edit">一個範例</a>。
                <!--If a selector is provided, popover objects will be delegated to the specified targets. In practice, this is used to enable dynamic HTML content to have popovers added. See <a href="https://github.com/twbs/bootstrap/issues/4215">this</a> and <a href="http://jsbin.com/zopod/1/edit">an informative example</a>.-->
            </td>
        </tr>
        <tr>
          <td>template</td>
          <td>string</td>
          <td><code>'&lt;div class="popover" role="tooltip"&gt;&lt;div class="arrow"&gt;&lt;/div&gt;&lt;h3 class="popover-title"&gt;&lt;/h3&gt;&lt;div class="popover-content"&gt;&lt;/div&gt;&lt;/div&gt;'</code></td>
          <td>
              <p>
                  基礎 HTML，用來建立彈出提示時使用。
                  <!--Base HTML to use when creating the popover.-->
              </p>
              <p>
                  彈出提示的 <code>title</code> 會被注入到 <code>.popover-title</code> 中。
                  <!--The popover's <code>title</code> will be injected into the <code>.popover-title</code>.-->
              </p>
              <p>
                  彈出提示的 <code>content</code> 會被注入到 <code>.popover-content</code> 中。
                  <!--The popover's <code>content</code> will be injected into the <code>.popover-content</code>.-->
              </p>
              <p>
                  <code>.arrow</code> 會變成彈出提示的箭頭。
                  <!--<code>.arrow</code> will become the popover's arrow.-->
              </p>
              <p>
                  最外層包覆的元素應該含有 <code>.popover</code> 類別。
                  <!--The outermost wrapper element should have the <code>.popover</code> class.-->
              </p>
          </td>
        </tr>
        <tr>
          <td>title</td>
          <td>string | function</td>
          <td>''</td>
          <td>
              <p>
                  如果 <code>title</code> 屬性不存在，使用此值做為預設內容。
                  <!--Default title value if <code>title</code> attribute isn't present.-->
              </p>
              <p>
                  如果一個 function 被指定，它將會呼叫它的 <code>this</code> 參考設定到元素上，彈出提示會被附加上去。
                  <!--If a function is given, it will be called with its <code>this</code> reference set to the element that the popover is attached to.-->
              </p>
          </td>
        </tr>
        <tr>
          <td>trigger</td>
          <td>string</td>
          <td>'click'</td>
            <td>
                彈出提示觸發方式 - <code>click</code> | <code>hover</code> | <code>focus</code> | <code>manual</code>。你也可以傳遞多個觸發器，使用空格分隔它們。
                <!--How popover is triggered - click | hover | focus | manual. You may pass multiple triggers; separate them with a space.-->
            </td>
        </tr>
        <tr>
          <td>viewport</td>
          <td>string | object</td>
          <td>{ selector: 'body', padding: 0 }</td>
          <td>
              <p>
                  保持此彈出提示在元素的邊界之內。例如：<code>viewport: '#viewport'</code> 或 <code>{ "selector": "#viewport", "padding": 0 }</code>
                  <!--Keeps the popover within the bounds of this element. Example: <code>viewport: '#viewport'</code> or <code>{ "selector": "#viewport", "padding": 0 }</code>-->
              </p>
          </td>
       </tr>
      </tbody>
    </table>
  </div><!-- /.table-responsive -->
  <div class="bs-callout bs-callout-info">
    <h4>個別彈出提示的 <code>data-</code> 屬性<!--Data attributes for individual popovers--></h4>
      <p>
          對於個別的彈出提示選項也可以透過 <code>data-</code> 屬性來指定，如上述解釋。
          <!--Options for individual popovers can alternatively be specified through the use of data attributes, as explained above.-->
      </p>
  </div>

  <h3>Methods方法<!--Methods--></h3>
  <h4>$().popover(options)</h4>
    <p>
        在一組元素集合上初始化彈出提示。
        <!--Initializes popovers for an element collection.-->
    </p>

  <h4>.popover('show')</h4>
    <p>
        呈現元素的彈出提示。<code>title</code> 屬性和內容長度為零的彈出提示將不會呈現。
        Reveals an element's popover. Popovers whose both title and content are zero-length are never displayed.
    </p>
  <div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'#element'</span><span class="p">).</span><span class="nx">popover</span><span class="p">(</span><span class="s1">'show'</span><span class="p">)</span></code></pre></div>

  <h4>.popover('hide')</h4>
    <p>
        隱藏元素的彈出提示。
        <!--Hides an element's popover.-->
    </p>
  <div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'#element'</span><span class="p">).</span><span class="nx">popover</span><span class="p">(</span><span class="s1">'hide'</span><span class="p">)</span></code></pre></div>

  <h4>.popover('toggle')</h4>
    <p>
        切換彈出提示的狀態（呈現/隱藏）。
        <!--Toggles an element's popover.-->
    </p>
  <div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'#element'</span><span class="p">).</span><span class="nx">popover</span><span class="p">(</span><span class="s1">'toggle'</span><span class="p">)</span></code></pre></div>

  <h4>.popover('destroy')</h4>
    <p>
        隱藏與刪除元素的彈出提示。
        <!--Hides and destroys an element's popover.-->
    </p>
  <div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'#element'</span><span class="p">).</span><span class="nx">popover</span><span class="p">(</span><span class="s1">'destroy'</span><span class="p">)</span></code></pre></div>
  <h3>事件<!--Events--></h3>
  <div class="table-responsive">
    <table class="table table-bordered table-striped">
      <thead>
        <tr>
          <th style="width: 150px;">事件類別<!--Event Type--></th>
          <th>說明<!--Description--></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>show.bs.popover</td>
            <td>
                當 <code>show</code> 執行個體方法被呼叫，此事件會立即被觸發。
                <!--This event fires immediately when the <code>show</code> instance method is called.-->
            </td>
        </tr>
        <tr>
          <td>shown.bs.popover</td>
            <td>
                當彈出提示已經在使用者面前顯示完成（且 CSS 轉場效果已經完成），此事件會被觸發。
                <!--This event is fired when the popover has been made visible to the user (will wait for CSS transitions to complete).-->
            </td>
        </tr>
        <tr>
          <td>hide.bs.popover</td>
            <td>
                當 <code>hide</code> 執行個體方法被呼叫，此此事件會立即被觸發。
                <!--This event is fired immediately when the <code>hide</code> instance method has been called.-->
            </td>
        </tr>
        <tr>
          <td>hidden.bs.popover</td>
            <td>
                當彈出提示已經在使用者面前隱藏完成（且 CSS 轉場效果已經完成），此事件會被觸發。
                <!--This event is fired when the popover has finished being hidden from the user (will wait for CSS transitions to complete).-->
            </td>
        </tr>
      </tbody>
    </table>
  </div><!-- /.table-responsive -->
<div class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">$</span><span class="p">(</span><span class="s1">'#myPopover'</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">'hidden.bs.popover'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="c1">// do something…</span>
<span class="p">})</span></code></pre></div>
</div>
